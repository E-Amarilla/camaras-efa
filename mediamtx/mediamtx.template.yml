###############################################
# Global settings

# Settings in this section are applied anywhere.

###############################################
# Global settings -> General

# Verbosity of the program; available values are "error", "warn", "info", "debug".
logLevel: info
# Destinations of log messages; available values are "stdout", "file" and "syslog".
logDestinations: [stdout]
# If "file" is in logDestinations, this is the file which will receive the logs.
logFile: mediamtx.log
# If "syslog" is in logDestinations, use prefix for logs.
sysLogPrefix: mediamtx

# Timeout of read operations.
readTimeout: 10s
# Timeout of write operations.
writeTimeout: 10s
# Size of the queue of outgoing packets.
# A higher value allows to increase throughput, a lower value allows to save RAM.
writeQueueSize: 512
# Maximum size of outgoing UDP packets.
# This can be decreased to avoid fragmentation on networks with a low UDP MTU.
udpMaxPayloadSize: 1472

# Command to run when a client connects to the server.
# This is terminated with SIGINT when a client disconnects from the server.
# The following environment variables are available:
# * MTX_CONN_TYPE: connection type
# * MTX_CONN_ID: connection ID
# * RTSP_PORT: RTSP server port
runOnConnect:
# Restart the command if it exits.
runOnConnectRestart: no
# Command to run when a client disconnects from the server.
# Environment variables are the same of runOnConnect.
runOnDisconnect:

###############################################
# Global settings -> Authentication

# Authentication method. Available values are:
# * internal: users are stored in the configuration file
# * http: an external HTTP URL is contacted to perform authentication
# * jwt: an external identity server provides authentication through JWTs
authMethod: internal

# Internal authentication.
# list of users.
authInternalUsers:
  # Default unprivileged user.
  # Username. 'any' means any user, including anonymous ones.
  - user: any
    # Password. Not used in case of 'any' user.
    pass:
    # IPs or networks allowed to use this user. An empty list means any IP.
    # Entries can be:
    # * a single IP: 1.2.3.4
    # * a CIDR: 1.2.3.0/24
    # * a range: 1.2.3.4-1.2.3.6
    ips: []
    # List of permissions.
    # Available permissions are "read" and "publish".
    permissions:
      # Paths can be set to further restrict access to a specific path.
      # If path is not specified, all paths are available.
      # The "*" path gives access to all paths.
      - action: read
      - action: publish

# HTTP authentication.
# HTTP URL to contact to perform authentication.
# The server receives a POST request with:
# {
#   "ip": "ip",
#   "user": "user",
#   "password": "password",
#   "path": "path",
#   "protocol": "rtsp|webrtc|hls|...",
#   "id": "id",
#   "action": "read|publish",
#   "query": "query"
# }
# The server must return a status code that begins with "20" (i.e. 200, 204).
# The server can optionally return a redirect URL by using header "Location".
authHTTPAddress:

# JWT-based authentication.
# Users have to login through an identity server (outside the scope of mediamtx)
# that provides username and password.
# The identity server must:
# 1) validate credentials
# 2) reply with a signed JWT that contains the following claims:
# {
#   "mediamtx_permissions": ["read", "publish"]
# }
# Mediamtx expects to receive the JWT inside a cookie called "jwt".
# JWKS URL or local path to a file containing the public keys needed to validate JWTs.
# If the JWT is signed with HMAC, the key must be provided as a base64-encoded string.
authJWTJWKS:

###############################################
# Global settings -> Control API

# Enable control API.
api: no
# Address of the API listener.
apiAddress: 127.0.0.1:9997

###############################################
# Global settings -> Metrics

# Enable metrics.
metrics: no
# Address of the metrics listener.
metricsAddress: 127.0.0.1:9998

###############################################
# Global settings -> PPROF

# Enable pprof-compatible endpoint to monitor performances.
pprof: no
# Address of the pprof listener.
pprofAddress: 127.0.0.1:9999

###############################################
# Global settings -> Logs on disk

# Enable writing logs to disk.
logsToDisk: no
# Path of the log file.
logsToDiskFile: ./logs/%Y-%m-%d_%H-%M-%S_%f.log

###############################################
# Global settings -> Playback server

# Enable playback server.
playback: no
# Address of the playback server.
playbackAddress: :9996

###############################################
# RTSP server

# Disable the RTSP server.
rtspDisable: no
# List of enabled RTSP transport protocols.
# UDP and UDP-multicast are available only when encryption is disabled.
protocols: [udp, multicast, tcp]
# Encrypt handshakes and TCP streams with TLS (RTSPS).
# Available values are "no", "strict", "optional".
encryption: no
# Address of the RTSP listener. This is needed only when encryption is "no" or "optional".
rtspAddress: :8554
# Address of the RTSPS listener. This is needed only when encryption is "strict" or "optional".
rtspsAddress: :8322
# Path to the server certificate. This is needed only when encryption is "strict" or "optional".
serverCert: server.crt
# Path to the server key. This is needed only when encryption is "strict" or "optional".
serverKey: server.key
# Authentication methods. Available are "basic" and "digest".
# "digest" doesn't provide any additional security and is available for compatibility only.
authMethods: [basic, digest]
# Read buffer size.
# This doesn't influence throughput and shouldn't be touched unless the server
# reports errors about the buffer size.
readBufferSize: 512000
# Write buffer size.
# This doesn't influence throughput and shouldn't be touched unless the server
# reports errors about the buffer size.
writeBufferSize: 512000
# Support range requests.
rangeRequests: yes

###############################################
# RTMP server

# Disable the RTMP server.
rtmpDisable: no
# Address of the RTMP listener. This is needed only when encryption is "no" or "optional".
rtmpAddress: :1935
# Encrypt connections with TLS (RTMPS).
# Available values are "no", "strict", "optional".
rtmpEncryption: no
# Address of the RTMPS listener. This is needed only when encryption is "strict" or "optional".
rtmpsAddress: :1936
# Path to the server certificate. This is needed only when encryption is "strict" or "optional".
rtmpServerCert: server.crt
# Path to the server key. This is needed only when encryption is "strict" or "optional".
rtmpServerKey: server.key
# Read buffer size.
# This doesn't influence throughput and shouldn't be touched unless the server
# reports errors about the buffer size.
rtmpReadBufferSize: 512000
# Write buffer size.
# This doesn't influence throughput and shouldn't be touched unless the server
# reports errors about the buffer size.
rtmpWriteBufferSize: 512000

###############################################
# HLS server

# Disable the HLS server.
hlsDisable: no
# Address of the HLS listener.
hlsAddress: :8888
# Enable TLS/HTTPS with the HLS server.
# Available values are "no", "strict", "optional".
hlsEncryption: no
# Address of the HLS listener when using TLS.
hlsServerCert: server.crt
# Path to the server key when using TLS.
hlsServerKey: server.key
# Allow origin header for CORS
# This is useful for playing HLS stream from browsers
# Note: This may introduce security vulnerabilities
# Read more about CORS: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
hlsAllowOrigin: "*"
# List of IPs or networks of proxies placed before the HLS server.
# If the server receives a request from one of these entries, IP in logs
# will be taken from the X-Forwarded-For header.
hlsTrustedProxies: []
# Directory in which to save segments, instead of keeping them in memory.
# This can help to reduce memory usage.
hlsDirectory: ""
# Number of HLS segments to keep on disk.
# Increase this if HLS clients disconnect frequently.
hlsSegmentCount: 7
# Minimum duration of each segment.
hlsSegmentDuration: 1s
# Minimum duration of the entire playlist.
hlsPartDuration: 200ms
# Maximum size of each segment.
hlsSegmentMaxSize: 50M

###############################################
# WebRTC server

# Disable the WebRTC server.
webrtcDisable: no
# Address of the WebRTC HTTP listener.
webrtcAddress: :8889
# Enable TLS/HTTPS with the WebRTC server.
# Available values are "no", "strict", "optional".
webrtcEncryption: no
# Address of the WebRTC HTTPS listener.
webrtcServerCert: server.crt
# Path to the server key.
webrtcServerKey: server.key
# Allow origin header for CORS
# This is useful for playing WebRTC stream from browsers
# Note: This may introduce security vulnerabilities
# Read more about CORS: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
webrtcAllowOrigin: "*"
# List of IPs or networks of proxies placed before the WebRTC server.
# If the server receives a request from one of these entries, IP in logs
# will be taken from the X-Forwarded-For header.
webrtcTrustedProxies: []
# List of ICE servers, in format type:user:pass:host:port or type:host:port.
# type can be "stun" or "turn".
# STUN servers are used to get the public IP of server and clients. They are
# needed when server and clients are on different LANs.
# TURN servers are used to relay traffic between server and clients when
# a direct connection is not possible. They are needed when the server or
# clients are behind a NAT/firewall that doesn't allow UDP traffic.
webrtcICEServers2: []
# List of public IP addresses that are to be used as a host.
# This is used typically for servers that are behind 1:1 D-NAT.
webrtcICEHostNAT1To1IPs: []
# Address of a ICE UDP listener in format host:port.
# If filled, ICE traffic will come through a single UDP port,
# allowing to pass through restrictive firewalls.
webrtcICEUDPMuxAddress:
# Address of a ICE TCP listener in format host:port.
# If filled, ICE traffic will come through a single TCP port,
# allowing to pass through restrictive firewalls.
webrtcICETCPMuxAddress:

###############################################
# SRT server

# Disable the SRT server.
srtDisable: no
# Address of the SRT listener.
srtAddress: :8890

###############################################
# Record streams to disk

# Record streams to disk.
record: no
# Path of recorded segments.
recordPath: ./recordings/%path/%Y-%m-%d_%H-%M-%S-%f
# Format of recorded segments.
# Available formats are "fmp4" (fragmented MP4) and "mpegts".
recordFormat: fmp4
# fMP4 segments are concatenation of small MP4 files (parts), each with this duration.
recordPartDuration: 100ms
# Minimum duration of each segment.
recordSegmentDuration: 1s

###############################################
# Paths

# These settings are path-dependent, and the map key is the name of the path.
# It's possible to use regular expressions by using a tilde as prefix,
# for example "~^prefix" will match all paths that start with "prefix".
paths:
  cam1:
    source: rtsp://admin:Beron2745@{{CAMERA_IP}}:554/Streaming/Channels/101
  cam2:
    source: rtsp://admin:Beron2745@{{CAMERA_IP}}:554/Streaming/Channels/201
  cam3:
    source: rtsp://admin:Beron2745@{{CAMERA_IP}}:554/Streaming/Channels/301
  cam4:
    source: rtsp://admin:Beron2745@{{CAMERA_IP}}:554/Streaming/Channels/501
  all_others:
